// <auto-generated />
using System;
using HigiaServer.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HigiaServer.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231126030213_CreatedInitial")]
    partial class CreatedInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HigiaServer.Domain.Common.BaseUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("is_admin");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("user", (string)null);

                    b.HasDiscriminator<bool>("IsAdmin");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HigiaServer.Domain.Entities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("EndCoordinate")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("final_coordinate");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("ExpectedEndTime")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("expected_end_time");

                    b.Property<string>("InitialCoordinate")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("initial_coordinate");

                    b.Property<DateTime>("InitialTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("observation");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("task", (string)null);
                });

            modelBuilder.Entity("task_user", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("task_id")
                        .HasColumnType("uuid");

                    b.HasKey("user_id", "task_id");

                    b.HasIndex("task_id");

                    b.ToTable("task_user");
                });

            modelBuilder.Entity("HigiaServer.Domain.Entities.Administrator", b =>
                {
                    b.HasBaseType("HigiaServer.Domain.Common.BaseUserEntity");

                    b.HasDiscriminator().HasValue(true);
                });

            modelBuilder.Entity("HigiaServer.Domain.Entities.Collaborator", b =>
                {
                    b.HasBaseType("HigiaServer.Domain.Common.BaseUserEntity");

                    b.HasDiscriminator().HasValue(false);
                });

            modelBuilder.Entity("task_user", b =>
                {
                    b.HasOne("HigiaServer.Domain.Entities.Task", null)
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HigiaServer.Domain.Entities.Collaborator", null)
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
